#include <Wire.h>
#include <RTClib.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

// Initialize RTC
RTC_DS3231 rtc;

struct Lesson {
  String startTime;
  String endTime;
  String subject;
};

struct DaySchedule {
  Lesson lessons[8];  // Maximum of 8 lessons per day
};

// Timetable for each weekday (Monday to Friday)
DaySchedule timetable[] = {
  { { { "13:15", "14:00", "Angol" },
      { "14:05", "14:45", "Angol" },
      { "15:35", "16:15", "Adatbázis" },
      { "16:20", "17:00", "Asztali" },
      { "17:05", "17:45", "Asztali" },
      { "17:50", "18:30", "Frontend" },
      { "18:35", "19:15", "Frontend" } } },
  { { { "10:25", "11:10", "Ofő" },
      { "13:15", "14:00", "Fizika" },
      { "14:05", "14:45", "Fizika" },
      { "14:50", "15:30", "Fizika" } } },
  { { { "13:15", "14:00", "Angol" },
      { "14:05", "14:45", "Angol" },
      { "14:50", "15:30", "Digitális kultúra" },
      { "16:20", "17:00", "Asztali" },
      { "17:05", "17:45", "Asztali" },
      { "17:50", "18:30", "Backend" },
      { "18:35", "19:15", "Backend" } } },
  { { { "14:05", "14:45", "Angol" },
      { "14:50", "15:30", "Digitális kultúra" },
      { "15:35", "16:15", "Frontend" },
      { "16:20", "17:00", "Frontend" },
      { "17:05", "17:45", "Backend" },
      { "17:50", "18:30", "Backend" },
      { "18:35", "19:15", "Asztali" } } },
  { { { "12:20", "13:05", "Digitális kultúra" },
      { "13:15", "14:00", "Adatbázis" },
      { "14:05", "14:45", "Adatbázis" } } }
};

int currentDay;
int currentTimeInMins;

int timeToMinutes(String time) {
  int colonIndex = time.indexOf(':');
  int hour = time.substring(0, colonIndex).toInt();
  int minute = time.substring(colonIndex + 1).toInt();
  return hour * 60 + minute;
}

void displayCurrentOrNextLesson() {
  DaySchedule todaySchedule = timetable[currentDay - 1];
  bool foundLesson = false;

  for (int i = 0; i < 8; i++) {
    Lesson lesson = todaySchedule.lessons[i];

    if (lesson.startTime == "" && lesson.endTime == "" && lesson.subject == "") {
      continue;
    }

    int lessonStart = timeToMinutes(lesson.startTime);
    int lessonEnd = timeToMinutes(lesson.endTime);

    if (currentTimeInMins < lessonStart) {
      // Next lesson
      display.println("Kovetkezo ora:");
      display.println(lesson.subject);
      display.println("Kezdes: " + lesson.startTime);
      display.println("Vege: " + lesson.endTime);
      foundLesson = true;
      break;
    } else if (currentTimeInMins >= lessonStart && currentTimeInMins < lessonEnd) {
      // Current lesson
      display.println("Jelenlegi ora:");
      display.println(lesson.subject);
      display.println("Vege: " + lesson.endTime);
      foundLesson = true;
      break;
    }
  }

  if (!foundLesson) {
    display.println("Nincs tobb ora ma");
  }
}

void setup() {
  // Initialize display
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    return;
  }

  // Initialize RTC
  if (!rtc.begin()) {
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(SSD1306_WHITE);
    display.setCursor(0, 0);
    display.println("RTC hiba!");
    display.display();
    return;
  }

  // Get current time
  DateTime now = rtc.now();
  currentDay = now.dayOfTheWeek();  // 0 = Sunday, 1 = Monday, ..., 6 = Saturday
  currentTimeInMins = now.hour() * 60 + now.minute();

  // Clear and prepare display (only once)
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0, 0);

  // Show current time
  display.print(now.hour());
  display.print(":");
  if (now.minute() < 10) display.print("0");
  display.println(now.minute());

  // Check if it's weekend
  if (currentDay == 0 || currentDay == 6) {
    display.println("Nincs ma suli");
  } else {
    displayCurrentOrNextLesson();
  }

  // Final display update
  display.display();
}

void loop() {
  // Empty since we only need setup
}
